type Skill {
  _id: ID!
  author: User # <== Se obtiene del token
  title: String
  slug: String
  description: String
  isPublished: Boolean
  isRecording: Boolean
  synopsis: String
  videoSynopsis: String
  imageSynopsis: ImageSizes
  category: String
  mainTech: String
  techs: [String]
  version: String
  duration: String
  role: String
  color: String
  logo: ImageSizes
  courses: [Course]
}

input SkillCreate {
  title: String
  slug: String
  description: String
  isPublished: Boolean
  isRecording: Boolean
  synopsis: String
  videoSynopsis: String
  category: String
  mainTech: String
  techs: [String]
  version: String
  duration: String
  role: String
  color: String
  courses: [String]
}

# En la entrada las lecciones son String
# Pero en la salida es un objeti tipo Lesson
input SkillSet {
  _id: ID!
  title: String
  slug: String
  description: String
  isPublished: Boolean
  isRecording: Boolean
  synopsis: String
  videoSynopsis: String
  category: String
  mainTech: String
  techs: [String]
  version: String
  duration: String
  role: String
  color: String
  courses: [String]
}

type Query {
  skills: [Skill!]!
}

type Mutation {
  skillCreate(input: SkillCreate): Skill
  skillUpdate(input: SkillSet): Skill
  skillDelete(_id: ID!): Skill
}